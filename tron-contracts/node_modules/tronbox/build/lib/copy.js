"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e2){didErr=true;err=_e2},f:function f(){try{if(!normalCompletion&&it["return"]!=null)it["return"]()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var cpr=require("cpr");var fs=require("fs");var _=require("lodash");var cpr_options={deleteFirst:false,overwrite:false,confirm:true};var copy=function copy(from,to,extra_options,callback){if(typeof extra_options==="function"){callback=extra_options;extra_options={}}var options=_.merge(_.clone(cpr_options),extra_options);cpr(from,to,options,function(err,files){var new_files=[];files=files||[];var _iterator=_createForOfIteratorHelper(files),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var file=_step.value;if(file.match(/.*PLACEHOLDER.*/)!=null){fs.unlinkSync(file);continue}new_files.push(file)}}catch(err){_iterator.e(err)}finally{_iterator.f()}callback(err,new_files)})};copy.file=function(from,to,callback){var readStream=fs.createReadStream(from,"utf8");var writeStream=fs.createWriteStream(to,"utf8");readStream.on("error",function(err){callback(err);callback=function callback(){}});writeStream.on("error",function(err){callback(err);callback=function callback(){}});writeStream.on("finish",function(){callback()});readStream.pipe(writeStream)};module.exports=copy;